<?php
/**
 *  Router dispatcher generated by crodas/Dispatcher
 *
 *  https://github.com/crodas/Dispatcher
 *
 *  This is a generated file, do not modify it.
 */
namespace AllTest;

class NotFoundException extends \Exception 
{
}

class Request
{
    protected $var;

    public function setIfEmpty($name, $value)
    {
        if (empty($this->var[$name])) {
            $this->var[$name] = $value;
        }
        return $this;
    }

    public function set($name, $value)
    {
        $this->var[$name] = $value;
        return $this;
    }

    public function get($name)
    {
        if (array_key_exists($name, $this->var)) {
            return $this->var[$name];
        }
        return NULL;
    }
}

class Route
{
    public function fromRequest(Request $req = NULL)
    {
        if (empty($req)) {
            $req = new Request;
        }
        return $this->doRoute($req, $_SERVER);
    }

    public function doRoute(Request $req, $server)
    {
        $parts  = array_values(array_filter(explode("/", $server['REQUEST_URI'])));
        $length = count($parts);

        if (empty($server['REQUEST_METHOD'])) {
            $server['REQUEST_METHOD'] = 'GET';
        }

        switch ($server["REQUEST_METHOD"]) {
        }
        
        switch ($length) {
        case 2:
            if ($parts[0] === 'function') {
                if (empty($file_e55749ee)) {
                   $file_e55749ee = 1;
                   require_once __DIR__ . "/../input/filter.php";
                }
                // Routes for /function/{reverse}
                if ($parts[0] === 'function' && (!empty($filter_cab1b2b5_1) || ($filter_cab1b2b5_1=\filter_reverse($req, 'reverse', $parts[1])))) {
                    $req->setIfEmpty('reverse', $parts[1]);
                    if (empty($file_2053a8ae)) {
                       $file_2053a8ae = 1;
                       require_once __DIR__ . "/../input/functions.php";
                    }
                    // do route
                    return \some_function($req);
                }
                // end of /function/{reverse}
                
                // Routes for /function/reverse
                if ($parts[0] === 'function' && $parts[1] === 'reverse') {
                    if (empty($file_2053a8ae)) {
                       $file_2053a8ae = 1;
                       require_once __DIR__ . "/../input/functions.php";
                    }
                    // do route
                    return \some_function($req);
                }
                // end of /function/reverse
            }
            if (empty($file_e55749ee)) {
               $file_e55749ee = 1;
               require_once __DIR__ . "/../input/filter.php";
            }
            // Routes for /ifempty/{something:algo-alias}
            if ($parts[0] === 'ifempty' && (!empty($filter_45a21400_1) || ($filter_45a21400_1=\filter_set($req, 'algo-alias', $parts[1])))) {
                $req->setIfEmpty('algo-alias', $parts[1]);
                if (empty($file_2053a8ae)) {
                   $file_2053a8ae = 1;
                   require_once __DIR__ . "/../input/functions.php";
                }
                // do route
                return \some_function($req);
            }
            // end of /ifempty/{something:algo-alias}
            break;
        }

        throw new NotFoundException;
    }
}
