<?php
/**
 *  Router dispatcher generated by crodas/Dispatcher
 *
 *  https://github.com/crodas/Dispatcher
 *
 *  This is a generated file, do not modify it.
 */
#* if ($config->getNamespace()) 
#* $namespace = $config->getNamespace()
namespace __namespace__;
#* end

#* 
#function render_urls($urls)
// __@urls__
#* 
#end
#function render($obj)
#   if (!is_object($obj))
#       render_urls($obj)
#       return ''
#   end
#   $expr = $obj->GetExpr()
switch (__expr__) {
#*  
#   foreach ($obj->GetMembers() as $type => $member)
#       if ($type == '') 
#           $zelse = $member
#           continue
#       end
case __@type__:
    #* render($member)
    break;
#*
#   end
}
#*
#   render($zelse)
#end


class NotFoundException extends \Exception 
{
}

class Request
{
    protected $var;

    public function set($name, $value)
    {
        $this->var[$name] = $value;
        return $this;
    }

    public function get($name)
    {
        if (array_key_exists($name, $this->var)) {
            return $this->var[$name];
        }
        return NULL;
    }
}

class Route
{
    public function fromRequest(Request $req = NULL)
    {
        if (empty($req)) {
            $req = new Request;
        }
        return $this->doRoute($req, $_SERVER);
    }

    public function doRoute(Request $req, $server)
    {
        $parts  = array_values(array_filter(explode("/", $server['REQUEST_URI'])));
        $length = count($parts);

        #* render($groups)

        throw new NotFoundException;
    }
}
